<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:tx="http://www.springframework.org/schema/tx"
xmlns:context="http://www.springframework.org/schema/context"
xmlns:mvc="http://www.springframework.org/schema/mvc"
xmlns:aop="http://www.springframework.org/schema/aop"
xsi:schemaLocation="http://www.springframework.org/schema/beans

			http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/tx
			http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/mvc
			http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
			http://www.springframework.org/schema/aop
			http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
			
		<!-- @service扫描 -->
	<context:component-scan base-package="org.lanqiao.business"></context:component-scan>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="org.lanqiao.mapper" />  
        <property name="annotationClass" value="org.springframework.stereotype.Repository"></property>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>  
    </bean>  		
  	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
    </bean>  		
	
	
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"  
        destroy-method="close">  
        <property name="driverClassName" value="${driverClass}" />  <!--  这里可以用类el表达式是因为配置了propertyConfigurer：若没在spring容器中配该对象，value的值就必须写字符串-->
        <property name="url" value="${jdbcUrl}" />  
        <property name="username" value="${user}" />  
        <property name="password" value="${password}" />   
      <!-- 
        <property name="initialSize" value="${initialSize}"></property>  
        连接池最大数量  
        <property name="maxActive" value="${maxActive}"></property>  
        连接池最大空闲  
        <property name="maxIdle" value="${maxIdle}"></property>  
        连接池最小空闲  
        <property name="minIdle" value="${minIdle}"></property>  
        获取连接最大等待时间  
        <property name="maxWait" value="${maxWait}"></property>  
        
        <--> 
    </bean>  
    
    
 	<bean id="propertyConfigurer"  
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="location" value="classpath:db.properties" />  
    </bean> 
    
  <!-- spring事务 -->
   <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	  <property name="dataSource"  ref="dataSource"></property>
	</bean>
	 <!-- 注解开启事务扫描 -->
    <!-- 
	<tx:annotation-driven transaction-manager="transactionManager"/>  -->
	<!-- 声明式事务处理 -->
	<tx:advice id="postAdvice" transaction-manager="transactionManager">
		<tx:attributes >
			<tx:method name="insert*" propagation="REQUIRED" isolation="DEFAULT" rollback-for="java.lang.Exception" read-only="false" timeout="-1"/>
			<tx:method name="add*" propagation="REQUIRED" isolation="DEFAULT" rollback-for="java.lang.Exception" read-only="false" timeout="-1"/>
			<tx:method name="del*" propagation="REQUIRED" isolation="DEFAULT" rollback-for="java.lang.Exception" read-only="false" timeout="-1"/>
			<tx:method name="*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut expression="execution(* org.lanqiao.business.*..*(..))" id="postPintCut"/>
		<aop:advisor advice-ref="postAdvice" pointcut-ref="postPintCut"/>
	</aop:config>
   
	
</beans>


