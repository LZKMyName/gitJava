<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:tx="http://www.springframework.org/schema/tx"
xmlns:context="http://www.springframework.org/schema/context"
xmlns:mvc="http://www.springframework.org/schema/mvc"
xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/tx
			http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/mvc
			http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
		
		<!-- 默认的注解映射的支持 -->
		<mvc:annotation-driven />
		<!-- @Controller扫描：在该包下找添加了@Controller注解的类用反射机制生成对应的控制器对象 -->
		<context:component-scan base-package="org.lanqiao.controller" >
		
		</context:component-scan>
		<!-- 放过静态资源 的两种方式-->
		<!-- mapping请求路径 -->
		<!-- location:查找文件的路径 -->
		<mvc:resources location="/static/css/" mapping="/static/css/**"/> 
		<mvc:resources location="/static/error/" mapping="/static/error/**"/> 
		<mvc:resources location="/static/js/" mapping="/static/js/**"/> 
		<mvc:resources location="/static/fonts/" mapping="/static/fonts/**"/>  
		<mvc:resources location="/upload/" mapping="/upload/**"/> 
		<mvc:resources location="/" mapping="/**"/>
		<!-- <mvc:default-servlet-handler/>  -->
		<!-- freemarker配置 -->
		
		<bean id="freemarkerConfigurer"  class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
			<property name="templateLoaderPath"  value="/WEB-INF/view/"></property>
			<property name="freemarkerSettings">
				<props>  
		            <prop key="template_update_delay">0</prop>  
		            <prop key="default_encoding">utf-8</prop>  
		            <prop key="number_format">0.##</prop>  
		            <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>  
		            <prop key="classic_compatible">true</prop>
        		</props>  
			</property>
		</bean>
		
		
		<!-- 配置视图处理器 （freemarker）-->
		<bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		    <!-- 非ajax请求返回的String所添加的后缀名 -->
		    
			<property name="suffix"  value=".ftl"></property>
			<!-- 页面类 -->
			<property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"></property>
			<!-- 页面打印的编码 -->
			<property name="contentType"  value="text/html;charset=utf-8"></property>
			<!-- freemarker存放请求转发的数据 -->
			<property name="requestContextAttribute" value="base"></property>
		</bean>
		
	  	<!-- SpringMVC的声明式异常处理类 -->
		<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">       
         <property name="exceptionMappings">       
             <props>       
                 <prop key="java.lang.Exception">errors/error</prop>       
                 <prop key="java.lang.Throwable">errors/err</prop>       
             </props>       
         </property>       
         <property name="statusCodes">       
             <props>       
                 <prop key="errors/error">500</prop>       
                 <prop key="errors/404">404</prop>       
             </props>       
         </property>       
         <!-- 设置日志输出级别，不定义则默认不输出警告等错误日志信息 -->       
         <property name="warnLogCategory" value="WARN"></property>       
         <!-- 默认错误页面，当找不到上面mappings中指定的异常对应视图时，使用本默认配置 -->       
         <property name="defaultErrorView" value="errors/error"></property>       
         <!-- 默认HTTP状态码 -->       
         <property name="defaultStatusCode" value="500"></property>       
     </bean>       
	<!--  springMvc 文件上传类的配置-->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" >
			<property value="utf-8" name="defaultEncoding"/>
			<property value="10485760000" name="maxUploadSize"/>
			<property value="40960" name="maxInMemorySize"/>
	</bean>
	

			
</beans>


